import os

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from utils.models import Users
from utils.states import Registration
from utils.keyboards import main_menu, admin_menu


start_router = Router()


@start_router.message(Command('start'))
async def start_handler(message: Message, state: FSMContext):
    if str(message.from_user.id) in os.getenv('ADMINS').split(','):
         await message.answer(f'üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å —Ö–æ–∑—è–∏–Ω!', reply_markup=admin_menu())
    else:
        user = Users.get_or_none(Users.user_id == message.from_user.id)
        if not user:
            await message.answer(f'''üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}
    –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º –±–æ—Ç–æ–º, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é\n\n
    –î–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è –ø–æ–ª–Ω–æ—Å—Ç—å—é, –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ''')
            await state.set_state(Registration.input_fullname)
        else:
            await message.answer(f'üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}\n\n'
                                f'–¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É, –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ',
                                reply_markup=main_menu())
